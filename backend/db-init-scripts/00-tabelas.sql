-- Este script cria as tabelas na ordem correta para satisfazer as chaves estrangeiras.
-- Tabelas 'users' e 'rooms' são criadas primeiro, pois 'bookings' depende de ambas.

-- Tabela para a entidade User
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 'BIGSERIAL' no PostgreSQL ou 'BIGINT AUTO_INCREMENT' no MySQL
    email VARCHAR(255) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255),
    password VARCHAR(255) NOT NULL,
    role VARCHAR(255)
);

---

-- Tabela para a entidade Room
CREATE TABLE rooms (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    room_type VARCHAR(255),
    room_price NUMERIC(19, 2), -- NUMERIC ou DECIMAL é o tipo ideal para BigDecimal, garantindo precisão
    room_photo_url VARCHAR(255),
    room_description TEXT -- TEXT é mais apropriado para descrições longas do que VARCHAR
);

---

-- Tabela para a entidade Booking
-- Criada por último pois contém chaves estrangeiras para 'users' e 'rooms'.
CREATE TABLE bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    check_in_date DATE NOT NULL,
    check_out_date DATE,
    num_of_adults INT NOT NULL,
    num_of_children INT NOT NULL,
    total_num_of_guest INT,
    booking_confirmation_code VARCHAR(255),
    user_id BIGINT,
    room_id BIGINT,

    -- Define as restrições de chave estrangeira
    CONSTRAINT fk_bookings_on_user FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_bookings_on_room FOREIGN KEY (room_id) REFERENCES rooms (id)
);
-- No seu arquivo de inicialização (ex: init.sql)

CREATE TABLE login_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    status VARCHAR(255) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    ip_address VARCHAR(255)
);